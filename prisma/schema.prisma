// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Author {
  id String @id @default(uuid())
  name String
  books BookAuthor[]
}

model BookAuthor {
  id Int @id @default(autoincrement())
  book Book @relation(fields: [bookId], references: [id])
  bookId String
  author Author @relation(fields: [authorId], references: [id])
  authorId String
}

model Book {
  id String @id @default(uuid())
  name String
  basePrice Float
  stock Int
  authors BookAuthor[]
  categories BookCategory[]
  sales saleBook[]
}

model BookCategory {
  id Int @id @default(autoincrement())
  book Book @relation(fields: [bookId], references: [id])
  bookId String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
}

model Category {
  id String @id @default(uuid())
  name String
  books BookCategory[]
}

model saleBook {
  id Int @id @default(autoincrement())
  sale Sale @relation(fields: [saleId], references: [id])
  saleId String
  book Book @relation(fields: [bookId], references: [id])
  bookId String
  quantity Int
  totalBookPrice Float
}

model Sale {
  id String @id @default(uuid())
  dateOfSale DateTime
  totalPrice Float
  books saleBook[]
}